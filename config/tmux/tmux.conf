# tmux.conf
########################################

set -s default-terminal "xterm-256color"
set-option -ag terminal-overrides ",xterm-256color:RGB"

setw -g automatic-rename on      # rename window after current program
set  -g renumber-windows on      # renumber windows when one is closed
# display tmux messages longer
set  -g display-time 1500
set  -g display-panes-time 800
# Address vim-mode switching delay (http://superuser.com/a/252717/65504)
set  -s escape-time   0
set -sg repeat-time   600
set  -g history-limit 50000
# Update status-{left,right} more often (default: 15)
set  -g status-interval 5
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize off
# For terminals that support them, propagate these events to programs that
# understand them.
set  -s focus-events on

### Status bar theme (and other)
set -g status-position bottom

# Options
rarrow=''
larrow=''
session_icon=''
# short for Theme-Colour
TC='#0087af'

G06=#3a3a3a #237
G07=#444444 #238
G12=#767676 #243

FG="#626262"
BG="#1c2328"

# Status options
set -gq status-interval 1
set -gq status on

# Basic status bar colors
set -gq status-fg "$FG"
set -gq status-bg "$BG"
set -gq status-attr none

# tmux-prefix-highlight
set -gq @prefix_highlight_fg "$BG"
set -gq @prefix_highlight_bg "$FG"
set -gq @prefix_highlight_show_copy_mode 'on'
set -gq @prefix_highlight_copy_mode_attr "fg=$TC,bg=$BG,bold"
set -gq @prefix_highlight_output_prefix "#[fg=$TC]#[bg=$BG]$larrow#[bg=$TC]#[fg=$BG]"
set -gq @prefix_highlight_output_suffix "#[fg=$TC]#[bg=$BG]$rarrow"

# Left side of status bar
set -gq status-left-bg "#262626"
set -gq status-left-fg "$G12"
set -gq status-left-length 150
LS="#[fg=$TC,bg=$G06] $session_icon #S "
LS="$LS#[fg=$G06,bg=$BG]$rarrow"
LS="$LS#{prefix_highlight}"
set -gq status-left "$LS"

# Right side of status bar
set -gq status-right-bg "$BG"
set -gq status-right-fg "$G12"
set -gq status-right-length 150
RS="#[fg=$G06]$larrow#[fg=$TC,bg=$G06] #{weather} "
RS="#{prefix_highlight}$RS"
set -gq status-right "$RS"

# Window status format
set -gq window-status-format         "#[fg=$BG,bg=$G06]$rarrow#[fg=$TC,bg=$G06] #I:#W #[fg=$G06,bg=$BG]$rarrow"
set -gq window-status-current-format "#[fg=$BG,bg=$TC]$rarrow#[fg=$BG,bg=$TC,bold] #I:#W #[fg=$TC,bg=$BG,nobold]$rarrow"

# Window status style
set -gq window-status-style          "fg=$TC,bg=$BG,none"
set -gq window-status-last-style     "fg=$TC,bg=$BG,bold"
set -gq window-status-activity-style "fg=$TC,bg=$BG,bold"

# Window separator
set -gq window-status-separator ""

# Pane border
set -gq pane-border-style "fg=$G07,bg=default"

# Active pane border
set -gq pane-active-border-style "fg=$TC,bg=default"

# Pane number indicator
set -gq display-panes-colour "$G07"
set -gq display-panes-active-colour "$TC"

# Clock mode
set -gq clock-mode-colour "$TC"
set -gq clock-mode-style 24

# Message
set -gq message-style "fg=$TC,bg=$BG"

# Command message
set -gq message-command-style "fg=$TC,bg=$BG"

# Copy mode highlight
set -gq mode-style "bg=$TC,fg=$FG"

########################################
# Keybinds                             #
########################################
# Vi-style keybinds
set -g status-keys vi
set -g mode-keys   vi

bind c new-window      -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

bind S-Left run '$TMUX_HOME/swap-pane.sh left'
bind S-Down run '$TMUX_HOME/swap-pane.sh down'
bind S-Up run '$TMUX_HOME/swap-pane.sh up'
bind S-Right run '$TMUX_HOME/swap-pane.sh right'
bind S-m run '$TMUX_HOME/swap-pane.sh master'

# Disable confirmation
bind x kill-pane

# Bind showing and unshowing the tmux bar
bind @ set status on
bind C-@ set status off

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-Left if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-Down if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-Up if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-Right if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# reload config without killing server
bind ^r source-file $DOTFILES/config/tmux/tmux.conf \; display-message "  Config reloaded..".

########################################
# Local config                         #
########################################
set -g @open-editor 'C-e'
set -g @open-S 'https://searxng.server.com/'

run-shell $TMUX_HOME/extraInit
if '[ -f ~/.tmux.conf ]' 'source-file ~/.tmux.conf'
